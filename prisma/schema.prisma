generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  resetCode String?
  resetCodeExpires DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  customers Customer[]
  sessions  UserSession[]

  @@map("users")
}

model UserSession {
  id           String   @id @default(cuid())
  userId       String
  token        String   @unique
  deviceFingerprint String
  userAgent    String?
  ipAddress    String?
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  lastUsedAt   DateTime @default(now())
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_sessions")
}

model Customer {
  id          String   @id @default(cuid())
  name        String
  email       String
  number      String
  address     Address?
  documents   Document[]
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("customers")
}

model Address {
  id         String   @id @default(cuid())
  street     String
  city       String
  state      String
  pinCode    String
  country    String
  customerId String   @unique
  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("addresses")
}

model Document {
  id         String      @id @default(cuid())
  type       DocumentType
  cardNumber String
  fileName   String
  filePath   String
  fileSize   Int
  customerId String
  customer   Customer    @relation(fields: [customerId], references: [id], onDelete: Cascade)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt

  @@map("documents")
}

enum DocumentType {
  AADHAR
  PAN
  PASSPORT
  LICENCE
}